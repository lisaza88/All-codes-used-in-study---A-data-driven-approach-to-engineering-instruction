import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

file_path = 'D:\\USER\\Downloads\\Student Study Data and Exam Scores.xlsx'
data = pd.read_excel(file_path)

features = data[['StudyQualitySurvey', 'TimeStudyingBeforeMidterm', 'Frequencybeforemidterm']]
target = data['MidtermScore']

X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

dt_model = DecisionTreeRegressor(random_state=42)

dt_model.fit(X_train_scaled, y_train)

predictions = dt_model.predict(X_test_scaled)

mse = mean_squared_error(y_test, predictions)
rmse = mean_squared_error(y_test, predictions, squared=False)
mae = mean_absolute_error(y_test, predictions)
r2 = r2_score(y_test, predictions)

print(f'Mean Squared Error: {mse}')
print(f'Root Mean Squared Error: {rmse}')
print(f'Mean Absolute Error: {mae}')
print(f'R-squared: {r2}')

print("\nFeature Importances:")
for feature, importance in zip(features.columns, dt_model.feature_importances_):
    print(f'Feature: {feature}, Importance: {importance}')

input("Press Enter to exit...")
